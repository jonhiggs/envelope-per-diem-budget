#!/usr/bin/env ruby
require '../lib/budget.rb'
#settings_file = File.join(File.dirname(__FILE__), "settings.yml")
#settings = YAML.load_file(settings_file)
#def cash_runway balance=0
#  days = 0
#  while balance >= PER_DIEM
#    balance -= cost_of_day(Date.today+days)
#    days += 1
#  end
#  days
#end
#
#def maximum_spend balance=0
#  (balance / per_diem_days_remaining).round(2)
#end

@balance = Budget::Balance.new
@today=Budget::Day.new(Date.today)
@tomorrow=Budget::Day.new(Date.tomorrow)
@balance.day = Date.today
@balance.bank = ARGV[0].to_f || 0
@balance.cash = ARGV[1].to_f || 0

unless @balance.net.zero?
  puts "# BALANCE"
  puts "Bank Balance:       $ #{@balance.bank}"
  puts "Cash Balance:       $ #{@balance.cash}"
  puts "Net Balance:        $ #{@balance.net}"

  puts "\n# POSITION"
  puts "Break Even:         $ #{@balance.break_even.round(2)}"
  puts "Surplus:            $ #{@balance.surplus.round(2)}"
  puts "Runway:             #{@balance.runway.size} days (#{@balance.runway.last})"
  puts "Next Payday:        #{@balance.days_remaining.size} days (#{@balance.calendar.days.last + 1.day})"
  puts
end

puts "# PER-DIEM"
puts "Today:              $#{@today.cash + @today.bonus}"
puts "Tomorrow:           $#{@tomorrow.cash + @tomorrow.bonus}"
